{{- $webhookName := printf "%s.%s.svc" "iomesh-webhook" .Release.Namespace }}
{{- $ca := genCA "iomesh-webhook-ca" 3650 }}
{{- $webhookServerCert := genSignedCert $webhookName nil (list $webhookName) 3650 $ca }}

{{- $webhookApiVersion := "v1beta1" }}
{{- if .Capabilities.APIVersions.Has "admissionregistration.k8s.io/v1" }}
  {{- $webhookApiVersion = "v1" }}
{{- end }}
---
kind: Secret
apiVersion: v1
metadata:
  name: {{ template "iomesh.webhook.cert" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "operator.selectorLabels" . | nindent 6 }}
type: Opaque
data:
  ca.crt: {{ b64enc $ca.Cert }}
  tls.crt: {{ b64enc $webhookServerCert.Cert }}
  tls.key: {{ b64enc $webhookServerCert.Key }}
---
{{- if eq $webhookApiVersion "v1" }}
apiVersion: admissionregistration.k8s.io/v1
{{- else -}}
apiVersion: admissionregistration.k8s.io/v1beta1
{{- end }}
kind: ValidatingWebhookConfiguration
metadata:
  name: iomesh-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    caBundle: {{ b64enc $ca.Cert }}
    service:
      name: iomesh-webhook
      namespace: {{ .Release.Namespace }}
      path: /validate-iomesh-com-v1alpha1-iomeshcluster
  failurePolicy: Fail
  name: validate-iomeshcluster.iomesh.com
  rules:
  - apiGroups:
    - iomesh.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - iomeshclusters
  sideEffects: None
  timeoutSeconds: 30

{{- if .Values.grafana.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      {{- with .Values.grafana.securityContext }}
      securityContext:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-pv
          image: projects.registry.vmware.com/antrea/busybox
          imagePullPolicy: IfNotPresent
          command: ["chown", "-R", "472:472", "/data"]
          volumeMounts:
          - mountPath: /data
            name: grafana-pv
      containers:
        - name: grafana
          image: {{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          env:
            - name: GF_INSTALL_PLUGINS
              value: {{ join "," .Values.grafana.installPlugins }}
            - name: CLICKHOUSE_USERNAME
              valueFrom:
                secretKeyRef: 
                  name: clickhouse-secret
                  key: username
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: clickhouse-secret
                  key: password
            - name: GF_AUTH_BASIC_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin-username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin-password
            - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
              value: /opt/grafana/dashboards/{{ .Values.grafana.homeDashboard }}
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasource-provider
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-provider
            - mountPath: /opt/grafana/dashboards
              name: grafana-dashboard-config
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasource-provider
          configMap:
            name: grafana-datasource-provider
        - name: grafana-dashboard-provider
          configMap:
            name: grafana-dashboard-provider
        - name: grafana-dashboard-config
          configMap:
            name: grafana-dashboard-config
{{- end }}

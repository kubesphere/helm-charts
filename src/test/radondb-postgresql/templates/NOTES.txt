{{- $clusterDomain:= .Values.clusterDomain }}
** Please be patient while the chart is being deployed **

PostgreSQL can be accessed through Pgpool via port {{ .Values.service.port }} on the following DNS name from within your cluster:

    {{ include "radondb.pgpool" . }}.{{ .Release.Namespace }}.svc.{{ $clusterDomain }}

Pgpool acts as a load balancer for PostgreSQL and forward read/write connections to the primary node while read-only connections are forwarded to standby nodes.

To get the password for {{ (include "radondb.postgresqlUsername" .) | quote }} run:

    export POSTGRES_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "radondb.postgresqlSecretName" . }} -o jsonpath="{.data.postgresql-password}" | base64 --decode)

To get the password for {{ (include "radondb.postgresqlRepmgrUsername" .) | quote }} run:

    export REPMGR_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ include "radondb.postgresqlSecretName" . }} -o jsonpath="{.data.repmgr-password}" | base64 --decode)

To connect to your database run the following command:

    kubectl run {{ include "common.names.fullname" . }}-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} --image {{ include "radondb.postgresqlImage" . }} --env="PGPASSWORD=$POSTGRES_PASSWORD" {{ if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}--labels="{{ include "common.names.fullname" . }}-client=true" {{- end }} \
        --command -- psql -h {{ include "radondb.pgpool" . }} -p {{ .Values.service.port }} -U {{ include "radondb.postgresqlUsername" . }}{{- if not (empty (include "radondb.postgresqlDatabase" .)) }} -d {{ include "radondb.postgresqlDatabase" . }}{{- end }}

{{- if and (.Values.networkPolicy.enabled) (not .Values.networkPolicy.allowExternal) }}

Note: Since NetworkPolicy is enabled, only pods with label "{{ include "common.names.fullname" . }}-client=true" will be able to connect to this PostgreSQL cluster.

{{- end }}

To connect to your database from outside the cluster execute the following commands:

{{- if contains "NodePort" .Values.service.type }}

    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "radondb.pgpool" . }}
    PGPASSWORD="$POSTGRES_PASSWORD" psql -h $NODE_IP -p $NODE_PORT -U {{ include "radondb.postgresqlUsername" . }}{{- if not (empty (include "radondb.postgresqlDatabase" .)) }} -d {{ include "radondb.postgresqlDatabase" . }}{{- end }}

{{- else if contains "LoadBalancer" .Values.service.type }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ include "radondb.pgpool" . }}

    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "radondb.pgpool" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
    PGPASSWORD="$POSTGRES_PASSWORD" psql -h $SERVICE_IP -p {{ .Values.service.port }}  -U {{ include "radondb.postgresqlUsername" . }}{{- if not (empty (include "radondb.postgresqlDatabase" .)) }} -d {{ include "radondb.postgresqlDatabase" . }}{{- end }}

{{- else if contains "ClusterIP" .Values.service.type }}

    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "radondb.pgpool" . }} {{ .Values.service.port }}:{{ .Values.service.port }} &
    psql -h 127.0.0.1 -p {{ .Values.service.port }} -U {{ include "radondb.postgresqlUsername" . }}{{- if not (empty (include "radondb.postgresqlDatabase" .)) }} -d {{ include "radondb.postgresqlDatabase" . }}{{- end }}

{{- end }}

{{- include "radondb.validateValues" . }}
{{- include "radondb.checkRollingTags" . }}

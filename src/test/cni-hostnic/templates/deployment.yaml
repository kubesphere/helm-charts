---

apiVersion: v1
kind: ConfigMap
metadata:
  name: hostnic-cfg-cm
  namespace: kube-system
data:
  hostnic: |
    {
      "pool": {
        "poolHigh": 5,
        "poolLow": 3,
        "maxNic": 60
      },
      "server": {
        "networkPolicy": "{{ .Values.config.networkpolicy }}"
      }
    }
  hostnic-cni: |
    {
      "cniVersion": "0.3.0",
      "name": "hostnic",
      "type": "hostnic",
      "serviceCIDR" : "{{ .Values.config.cidr }}"
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: hostnic-ipam-config
  namespace: kube-system
data:
  subnet-auto-assign: "{{ .Values.config.auto }}"
  ipam: {{ .Values.config.ipam | b64dec | toJson }}

---

apiVersion: network.qingcloud.com/v1alpha1
kind: VxNetPool
metadata:
  name: v-pool
spec:
  vxnets: {{ .Values.config.vxnets | b64dec }}
  blockSize: {{ .Values.config.blocksize }}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: hostnic-node
  name: hostnic-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hostnic-node
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: hostnic-node
    spec:
      containers:
        - command:
            - /app/hostnic-agent
            - --v=5
            - --metrics-port=9191
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: "{{ .Values.config.image }}"
          imagePullPolicy: IfNotPresent
          name: hostnic-node
          ports:
            - containerPort: 61678
              hostPort: 61678
              name: metrics
              protocol: TCP
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/cni/bin
              name: cni-bin-dir
            - mountPath: /etc/cni/net.d
              name: cni-net-dir
            - mountPath: /etc/hostnic/
              name: hostnic-cfg
            - mountPath: /var/lib/hostnic
              name: hostnic-db
            - mountPath: /var/run/hostnic
              name: hostnic-run
            - mountPath: /root/.qingcloud/
              name: apiaccesskey
              readOnly: true
            - mountPath: /etc/qingcloud/
              name: qingcloud-cfg
              readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      initContainers:
        - args:
            - /app/install_hostnic.sh
          command:
            - /bin/sh
          image: "{{ .Values.config.image }}"
          imagePullPolicy: IfNotPresent
          name: hostnic-init
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/cni/bin
              name: cni-bin-dir
            - mountPath: /etc/cni/net.d
              name: cni-net-dir
            - mountPath: /etc/hostnic/
              name: hostnic-cfg
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: hostnic-node
      serviceAccountName: hostnic-node
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /opt/cni/bin
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
          name: cni-net-dir
        - hostPath:
            path: /var/lib/hostnic
          name: hostnic-db
        - hostPath:
            path: /var/run/hostnic
          name: hostnic-run
        - configMap:
            items:
              - key: hostnic
                path: hostnic.json
              - key: hostnic-cni
                path: 10-hostnic.conf
            name: hostnic-cfg-cm
          name: hostnic-cfg
        - name: apiaccesskey
          configMap:
            items:
            - key: config.yaml
              path: config.yaml
            name: hostnic-qingcloud
        - hostPath:
            path: /etc/qingcloud
          name: qingcloud-cfg
  updateStrategy:
    type: RollingUpdate

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hostnic-controller
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hostnic-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: hostnic-controller
    spec:
      containers:
        - name: hostnic-controller
          image: "{{ .Values.config.image }}"
          command:
            - /app/hostnic-controller
            - --v=5
          volumeMounts:
            - mountPath: /root/.qingcloud/
              name: apiaccesskey
              readOnly: true
            - mountPath: /etc/qingcloud/
              name: qingcloud-cfg
              readOnly: true
            - mountPath: /var/run/hostnic
              name: hostnic-run
            - mountPath: /etc/kubernetes
              name: clusterconfig
              readOnly: true
      serviceAccount: hostnic-node
      serviceAccountName: hostnic-node
      hostNetwork: true
      volumes:
        - hostPath:
            path: /etc/qingcloud
          name: qingcloud-cfg
        - hostPath:
            path: /var/run/hostnic
          name: hostnic-run
        - configMap:
            name: clusterconfig
          name: clusterconfig
        - configMap:
            items:
            - key: config.yaml
              path: config.yaml
            name: hostnic-qingcloud
          name: apiaccesskey

{{ if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  replicas: 1
  serviceName: "metersphere-mysql"
  selector:
    matchLabels:
      app: metersphere-mysql
  template:
    metadata:
      labels:
        app: metersphere-mysql
    spec:
      containers:
        - name: mysql
          image: {{.Values.common.imagePrefix}}{{.Values.mysql.image}}:{{.Values.mysql.imageTag}}
          imagePullPolicy: {{.Values.common.imagePullPolicy}}
          resources:
            requests:
              memory: 100Mi
              cpu: 0.1
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{.Values.mysql.password}}
          ports:
            - name: tcp
              containerPort: 3306
          volumeMounts:
            - mountPath: /etc/mysql/conf.d/my.cnf
              name: opt-metersphere-config
              subPath: my.cnf
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: init-mysql
              subPath: init.sql
            - mountPath: /var/lib/mysql
              name: mysql-data
              subPath: mysql
      {{if ne (.Values.common.imagePullSecret | default "nil") "nil"}}
      imagePullSecrets:
        - name: {{.Values.common.imagePullSecret}}
      {{ end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: mysql-config
          name: opt-metersphere-config
        - configMap:
            defaultMode: 420
            name: mysql-config
          name: init-mysql
        - name: mysql-data
          {{if .Values.mysql.persistence.enabled}}
          persistentVolumeClaim:
            claimName: mysql-data-pvc
          {{ else }}
          emptyDir: {}
          {{ end }}
          
---
apiVersion: v1
kind: Service
metadata:
  name: metersphere-mysql
  labels:
    app: metersphere-mysql
spec:
  clusterIP: None
  selector:
    app: metersphere-mysql
  ports:
    - name: tcp
      port: 3306
      protocol: TCP
{{end}}
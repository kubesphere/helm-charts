#  Copyright (C) 2018 Yunify, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this work except in compliance with the License.
#  You may obtain a copy of the License in the LICENSE file, or at:
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-neonsan-node
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-neonsan
    role: node
    owner: yunify
    ver: {{ .Values.driver.tag }}
spec:
  selector:
    matchLabels:
      app: csi-neonsan
      role: node
      owner: yunify
      ver: {{ .Values.driver.tag }}
  template:
    metadata:
      labels:
        app: csi-neonsan
        role: node
        owner: yunify
        ver: {{ .Values.driver.tag }}
    spec:
      serviceAccount: csi-neonsan-node
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: dedicated
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
      hostNetwork: true
      containers:
      - name: csi-neonsan
        image: "{{ .Values.driver.node.repository }}:{{ .Values.driver.node.tag }}"
        imagePullPolicy: {{ .Values.driver.node.pullPolicy }}
        securityContext:
          privileged: true
        args:
          - "--config=/etc/neonsan/qbd.conf"
          - "--drivername={{ .Values.driver.name }}"
          - "--endpoint=$(CSI_ENDPOINT)"
          - "--maxvolume=100"
          - "--nodeid=$(NODE_ID)"
          - "--v=5"
        env:
          - name: NODE_ID
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: CSI_ENDPOINT
            value: unix://csi/csi.sock
        volumeMounts:
          - name: socket-dir
            mountPath: /csi
          - name: neonsan-config
            mountPath: /etc/neonsan/qbd.conf
          - name: qbd
            mountPath: /usr/sbin/qbd
          - name: dev-dir
            mountPath: /dev
          - name: plugin-dir
            mountPath: /var/lib/kubelet/plugins
            mountPropagation: "Bidirectional"
          - name: mountpoint-dir
            mountPath: /var/lib/kubelet/pods
            mountPropagation: "Bidirectional"
      - name: node-registrar
        image: "{{ .Values.registrar.repository }}:{{ .Values.registrar.tag }}"
        imagePullPolicy: "IfNotPresent"
        resources:
            requests:
              memory: "20Mi"
              cpu: "10m"
        args:
          - "--csi-address=$(ADDRESS)"
          - "--kubelet-registration-path=/var/lib/kubelet/plugins/{{ .Values.driver.name }}/csi.sock"
          - "--v=5"
        env:
          - name: ADDRESS
            value: /csi/csi.sock
        lifecycle:
          preStop:
            exec:
              command: [
                "/bin/sh", "-c",
                "rm -rf /registration/{{ .Values.driver.name | replace " " "" }} \
                 /registration/{{ .Values.driver.name | replace " " "" }}-reg.sock"]
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/{{ .Values.driver.name }}/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
        - name: dev-dir
          hostPath:
            path: /dev
            type: Directory
        - name: neonsan-config
          hostPath:
            path: {{ .Values.driver.config }}
            type: File
        - name: qbd
          hostPath:
            path: /usr/sbin/qbd
            type: File
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate

{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
  annotations:
    {{- include "gitlab.deploymentAnnotations" . | nindent 4 }}
spec:
  {{- if .Values.global.operator.enabled }}
  paused: true
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
{{- if .Values.deployment.strategy }}
  strategy:
    {{- .Values.deployment.strategy | toYaml | nindent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
{{- if .Values.metrics.enabled }}
        {{- toYaml .Values.metrics.annotations | nindent 8 }}
{{- end }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- if eq (default .Values.global.antiAffinity .Values.antiAffinity) "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ template "name" . }}
                  release: {{ .Release.Name }}
      {{- else if eq (default .Values.global.antiAffinity .Values.antiAffinity) "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "name" . }}
                  release: {{ .Release.Name }}
      {{- end }}
      {{- if or .Values.serviceAccount.enabled .Values.global.serviceAccount.enabled }}
      serviceAccountName: {{ include "gitlab.serviceAccount.name" . }}
      {{- end }}
      initContainers:
        {{- include "gitlab.extraInitContainers" . | nindent 8 }}
        {{- include "gitlab.certificates.initContainer" . | nindent 8 }}
        - name: configure
          command: ['sh']
          args: [ '-c', 'sh -x /config-webservice/configure ; sh -x /config-workhorse/configure ; mkdir -p -m 3770 /tmp/gitlab']
          image: {{ include "gitlab.busybox.image" (dict "local" .Values.init "global" $.Values.global.busybox) | quote }}
          env:
          {{- include "gitlab.extraEnv" . | nindent 10 }}
          volumeMounts:
          {{- include "gitlab.extraVolumeMounts" . | nindent 10 }}
          {{- include "gitlab.psql.ssl.volumeMount" . | nindent 10 }}
          {{- include "gitlab.geo.psql.ssl.volumeMount" . | nindent 10 }}
          - name: webservice-config
            mountPath: /config-webservice
            readOnly: true
          - name: workhorse-config
            mountPath: /config-workhorse
            readOnly: true
          - name: init-webservice-secrets
            mountPath: /init-config
            readOnly: true
          - name: webservice-secrets
            mountPath: /init-secrets
            readOnly: false
          - name: workhorse-secrets
            mountPath: /init-secrets-workhorse
            readOnly: false
          - name: shared-tmp
            mountPath: /tmp
            readOnly: false
          resources:
            {{- toYaml .Values.init.resources | nindent 12 }}
        - name: dependencies
          image: {{ include "webservice.image" . }}
          {{ template "gitlab.imagePullPolicy" . }}
          args:
            - /scripts/wait-for-deps
          env:
{{- if .Values.global.operator.enabled }}
            - name: BYPASS_SCHEMA_VERSION
              value: 'true'
{{- end }}
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            - name: WORKHORSE_ARCHIVE_CACHE_DISABLED
              value: "1"
            {{- if .Values.global.rails.bootsnap.enabled }}
            - name: ENABLE_BOOTSNAP
              value: "1"
            {{- end }}
            {{- include "gitlab.extraEnv" . | nindent 12 }}
          volumeMounts:
            {{- include "gitlab.extraVolumeMounts" . | nindent 12 }}
            - name: webservice-config
              mountPath: '/var/opt/gitlab/templates'
            - name: webservice-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: webservice-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
              readOnly: true
          resources:
            {{- toYaml .Values.init.resources | nindent 12 }}
{{- include "pullsecrets" .Values.image | indent 6 }}
      containers:
        {{- include "gitlab.extraContainers" . | nindent 8 }}
        - name: {{ .Chart.Name }}
          image: {{ include "webservice.image" . }}
          {{ template "gitlab.imagePullPolicy" . }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              name: webservice
          env:
            - name: GITLAB_WEBSERVER
              value: {{ .Values.webServer }}
            - name: TMPDIR
              value: "/tmp/gitlab"
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
{{- if .Values.metrics.enabled }}
            - name: prometheus_multiproc_dir
              value: /metrics
{{- end }}
{{- if .Values.workhorse.sentryDSN }}
            - name: GITLAB_WORKHORSE_SENTRY_DSN
              value: {{ .Values.workhorse.sentryDSN }}
{{- end }}
            {{- if .Values.global.rails.bootsnap.enabled }}
            - name: ENABLE_BOOTSNAP
              value: "1"
            {{- end }}
            - name: WORKER_PROCESSES
              value: "{{ .Values.workerProcesses }}"
            - name: WORKER_TIMEOUT
              value: "{{ .Values.global.webservice.workerTimeout }}"
            - name: INTERNAL_PORT
              value: "{{ .Values.service.internalPort }}"
            {{- if eq .Values.webServer "puma" }}
            - name: PUMA_THREADS_MIN
              value: "{{ .Values.puma.threads.min }}"
            - name: PUMA_THREADS_MAX
              value: "{{ .Values.puma.threads.max }}"
            - name: PUMA_WORKER_MAX_MEMORY
              value: "{{ .Values.puma.workerMaxMemory }}"
            - name: DISABLE_PUMA_WORKER_KILLER
              value: "{{ .Values.puma.disableWorkerKiller }}"
            {{- else }}
            - name: UNICORN_MEMORY_MIN
              value: "{{ .Values.unicorn.memory.min }}"
            - name: UNICORN_MEMORY_MAX
              value: "{{ .Values.unicorn.memory.max }}"
            {{- end }}
            {{- include "gitlab.tracing.env" . | nindent 12 }}
            - name: GITLAB_TRACING_URL
              value: {{ .Values.global.tracing.urlTemplate | quote }}
            {{- include "gitlab.extraEnv" . | nindent 12 }}
          volumeMounts:
{{- if .Values.metrics.enabled }}
            - name: webservice-metrics
              mountPath: '/metrics'
{{- end }}
            - name: webservice-config
              mountPath: '/var/opt/gitlab/templates'
            - name: webservice-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: webservice-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
            - name: webservice-config
              mountPath: '/srv/gitlab/config/initializers/smtp_settings.rb'
              subPath: smtp_settings.rb
            - name: webservice-config
              mountPath: '/srv/gitlab/INSTALLATION_TYPE'
              subPath: installation_type
            - name: shared-upload-directory
              mountPath: /srv/gitlab/public/uploads/tmp
              readOnly: false
            - name: shared-artifact-directory
              mountPath: /srv/gitlab/shared
              readOnly: false
            - name: shared-tmp
              mountPath: '/tmp'
              readOnly: false
{{- if .Values.global.email.smime.enabled }}
            - name: smime-creds
              mountPath: /home/git/gitlab
              readOnly: true
{{- end }}
            {{- include "gitlab.certificates.volumeMount" . | nindent 12 }}
            {{- include "gitlab.extraVolumeMounts" . | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /-/liveness
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /-/readiness
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          lifecycle:
            preStop:
              exec:
                {{- if eq (lower .Values.webServer) "unicorn" }}
                command: ["/bin/bash", "-c", "pkill -SIGQUIT -f 'unicorn master'"]
                {{- else }}
                command: ["/bin/bash", "-c", "pkill -SIGINT -o ruby"]
                {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: gitlab-workhorse
          image: "{{ coalesce .Values.workhorse.image (include "workhorse.repository" .) }}:{{ coalesce .Values.workhorse.tag (include "gitlab.versionTag" . ) }}"
          {{ template "gitlab.imagePullPolicy" . }}
          ports:
            - containerPort: {{ .Values.service.workhorseInternalPort }}
              name: workhorse
          env:
            - name: TMPDIR
              value: "/tmp/gitlab"
            - name: GITLAB_WORKHORSE_EXTRA_ARGS
              value: {{ .Values.workhorse.extraArgs | quote }}
            - name: GITLAB_WORKHORSE_LISTEN_PORT
              value: {{ default 8181 .Values.service.workhorseInternalPort | int | quote }}
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            {{- include "gitlab.tracing.env" . | nindent 12 }}
            {{- include "gitlab.extraEnv" . | nindent 12 }}
          volumeMounts:
            - name: workhorse-config
              mountPath: '/var/opt/gitlab/templates'
            - name: workhorse-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: shared-upload-directory
              mountPath: /srv/gitlab/public/uploads/tmp
              readOnly: false
            - name: shared-artifact-directory
              mountPath: /srv/gitlab/shared
              readOnly: false
            - name: shared-tmp
              mountPath: '/tmp'
              readOnly: false
            {{- include "gitlab.certificates.volumeMount" . | nindent 12 }}
            {{- include "gitlab.extraVolumeMounts" . | nindent 12 }}
          livenessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: {{ .Values.workhorse.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.workhorse.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.workhorse.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.workhorse.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.workhorse.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: {{ .Values.workhorse.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.workhorse.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.workhorse.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.workhorse.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.workhorse.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.workhorse.resources | nindent 12 }}
      volumes:
      {{- include "gitlab.extraVolumes" . | nindent 6 }}
      {{- include "gitlab.psql.ssl.volume" . | nindent 6 }}
      {{- include "gitlab.geo.psql.ssl.volume" . | nindent 6 }}
      - name: shared-tmp
        emptyDir: {}
{{- if .Values.metrics.enabled }}
      - name: webservice-metrics
        emptyDir:
          medium: "Memory"
{{- end }}
      - name: webservice-config
        configMap:
          name: {{ template "fullname" . }}
      - name: workhorse-config
        configMap:
            name: {{ .Release.Name }}-workhorse-config
      - name: init-webservice-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: {{ template "gitlab.rails-secrets.secret" . }}
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: {{ template "gitlab.gitlab-shell.authToken.secret" . }}
              items:
                - key: {{ template "gitlab.gitlab-shell.authToken.key" . }}
                  path: shell/.gitlab_shell_secret
          - secret:
              name: {{ template "gitlab.gitaly.authToken.secret" . }}
              items:
                - key: {{ template "gitlab.gitaly.authToken.key" . }}
                  path: gitaly/gitaly_token
          {{- include "gitlab.redis.secrets" . | nindent 10 }}
          - secret:
              name: {{ template "gitlab.psql.password.secret" . }}
              items:
                - key: {{ template "gitlab.psql.password.key" . }}
                  path: postgres/psql-password
          {{- if include "gitlab.geo.secondary" $ }}
          - secret:
              name: {{ template "gitlab.geo.psql.password.secret" . }}
              items:
                - key: {{ template "gitlab.geo.psql.password.key" . }}
                  path: postgres/geo-psql-password
          {{- end }}
          - secret:
              name: {{ template "gitlab.registry.certificate.secret" . }}
              items:
                - key: registry-auth.key
                  path: registry/gitlab-registry.key
          - secret:
              name: {{ template "gitlab.workhorse.secret" . }}
              items:
                - key: {{ template "gitlab.workhorse.key" . }}
                  path: gitlab-workhorse/secret
          {{- include "gitlab.minio.mountSecrets" $ | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "artifacts" "config" $.Values.global.appConfig.artifacts) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "lfs" "config" $.Values.global.appConfig.lfs) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "uploads" "config" $.Values.global.appConfig.uploads) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "packages" "config" $.Values.global.appConfig.packages) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "external_diffs" "config" $.Values.global.appConfig.externalDiffs) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "terraform_state" "config" $.Values.global.appConfig.terraformState) | nindent 10 }}
          {{- include "gitlab.appConfig.ldap.servers.mountSecrets" $ | nindent 10 }}
          {{- include "gitlab.appConfig.omniauth.mountSecrets" $ | nindent 10 }}
          {{- if and $.Values.global.smtp.enabled $.Values.global.smtp.authentication }}
          - secret:
              name: {{ .Values.global.smtp.password.secret | required "Missing required secret containing the SMTP password. Make sure to set `global.smtp.password.secret`" }}
              items:
                - key: {{ .Values.global.smtp.password.key }}
                  path: smtp/smtp-password
          {{- end }}
{{- if .Values.global.email.smime.enabled }}
      - name: smime-creds
        secret:
          secretName: {{ .Values.global.email.smime.secretName }}
          items:
            - key: {{ .Values.global.email.smime.keyName }}
              path: .gitlab_smime_key
            - key: {{ .Values.global.email.smime.certName }}
              path: .gitlab_smime_cert
{{- end }}
      - name: webservice-secrets
        emptyDir:
          medium: "Memory"
      - name: workhorse-secrets
        emptyDir:
          medium: "Memory"
      - name: shared-upload-directory
        emptyDir: {}
      - name: shared-artifact-directory
        emptyDir: {}
      {{- include "gitlab.certificates.volumes" . | nindent 6 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
{{- end }}

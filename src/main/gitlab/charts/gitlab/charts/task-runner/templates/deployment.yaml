{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
  annotations:
    {{- include "gitlab.deploymentAnnotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas | int }}
  strategy:
    rollingUpdate: null
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- if or .Values.serviceAccount.enabled .Values.global.serviceAccount.enabled }}
      serviceAccountName: {{ include "gitlab.serviceAccount.name" . }}
      {{- end }}
      initContainers:
        {{- include "gitlab.extraInitContainers" . | nindent 8 }}
        {{- include "gitlab.certificates.initContainer" . | nindent 8 }}
        - name: configure
          command: ['sh', '/config/configure']
          image: {{ include "gitlab.busybox.image" (dict "local" .Values.init "global" $.Values.global.busybox) | quote }}
          env:
          {{- include "gitlab.extraEnv" . | nindent 10 }}
          volumeMounts:
          {{- include "gitlab.extraVolumeMounts" . | nindent 10 }}
          {{- include "gitlab.psql.ssl.volumeMount" . | nindent 10 }}
          {{- include "gitlab.geo.psql.ssl.volumeMount" . | nindent 10 }}
          - name: task-runner-config
            mountPath: /config
            readOnly: true
          - name: init-task-runner-secrets
            mountPath: /init-config
            readOnly: true
          - name: task-runner-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
            {{- toYaml .Values.init.resources | nindent 12 }}
{{- include "pullsecrets" .Values.image | indent 6 }}
      {{- if .Values.antiAffinityLabels.matchLabels }}
      {{- if eq (default .Values.global.antiAffinity .Values.antiAffinity) "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  {{- toYaml .Values.antiAffinityLabels.matchLabels | nindent 18 }}
                  release: {{ .Release.Name }}
      {{- else if eq (default .Values.global.antiAffinity .Values.antiAffinity) "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  {{- toYaml .Values.antiAffinityLabels.matchLabels | nindent 18 }}
                  release: {{ .Release.Name }}
      {{- end }}
      {{- end }}
      containers:
        {{- include "gitlab.extraContainers" . | nindent 8 }}
        - name: {{ .Chart.Name }}
          args:
            - /bin/bash
            - -c
            {{- if eq .Values.backups.objectStorage.backend "s3" }}
            - cp -v -r -L /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done # alpine sleep has no infinity
            {{- else if eq .Values.backups.objectStorage.backend "gcs" }}
            - sh /var/opt/gitlab/templates/configure-gsutil && while sleep 3600; do :; done
            {{- end }}
          image: "{{ coalesce .Values.image.repository (include "image.repository" .) }}:{{ coalesce .Values.image.tag (include "gitlab.versionTag" . ) }}"
          {{ template "gitlab.imagePullPolicy" . }}
          env:
            - name: ARTIFACTS_BUCKET_NAME
              value: {{ .Values.global.appConfig.artifacts.bucket }}
            - name: REGISTRY_BUCKET_NAME
              value: {{ .Values.global.registry.bucket }}
            - name: LFS_BUCKET_NAME
              value: {{ .Values.global.appConfig.lfs.bucket }}
            - name: UPLOADS_BUCKET_NAME
              value: {{ .Values.global.appConfig.uploads.bucket }}
            - name: PACKAGES_BUCKET_NAME
              value: {{ .Values.global.appConfig.packages.bucket }}
            - name: EXTERNAL_DIFFS_BUCKET_NAME
              value: {{ .Values.global.appConfig.externalDiffs.bucket }}
            - name: TERRAFORM_STATE_BUCKET_NAME
              value: {{ .Values.global.appConfig.terraformState.bucket }}
            - name: BACKUP_BUCKET_NAME
              value: {{ .Values.global.appConfig.backups.bucket }}
            - name: BACKUP_BACKEND
              value: {{ .Values.backups.objectStorage.backend }}
            - name: TMP_BUCKET_NAME
              value: {{ .Values.global.appConfig.backups.tmpBucket }}
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            {{- if .Values.global.rails.bootsnap.enabled }}
            - name: ENABLE_BOOTSNAP
              value: "1"
            {{- end }}
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/srv/gitlab/config'
            {{- if eq .Values.backups.objectStorage.backend "gcs" }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: '/etc/gitlab/objectstorage/{{ default "config" .Values.backups.objectStorage.config.key }}'
            {{- end }}
            {{- include "gitlab.extraEnv" . | nindent 12 }}
          volumeMounts:
            {{- include "gitlab.extraVolumeMounts" . | nindent 12 }}
            - name: task-runner-config
              mountPath: '/var/opt/gitlab/templates'
            - name: task-runner-config
              mountPath: '/srv/gitlab/config/initializers/smtp_settings.rb'
              subPath: smtp_settings.rb
            - name: task-runner-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: task-runner-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
            - name: task-runner-tmp
              mountPath: '/srv/gitlab/tmp'
              {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
              subPath: "{{ .Values.persistence.subPath }}"
              {{- end }}
              readOnly: false
{{- if .Values.global.email.smime.enabled }}
            - name: smime-creds
              mountPath: /home/git/gitlab
              readOnly: true
{{- end }}
            {{- include "gitlab.certificates.volumeMount" . | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- include "gitlab.extraVolumes" . | nindent 6 }}
      {{- include "gitlab.psql.ssl.volume" . | nindent 6 }}
      {{- include "gitlab.geo.psql.ssl.volume" . | nindent 6 }}
      - name: task-runner-config
        projected:
          sources:
            - configMap:
                name: {{ template "fullname" . }}
            {{- if .Values.global.appConfig.pseudonymizer.configMap }}
            - configMap:
                name: {{ .Values.global.appConfig.pseudonymizer.configMap }}
            {{- end }}
      - name: task-runner-tmp
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-tmp
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: init-task-runner-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: {{ template "gitlab.rails-secrets.secret" . }}
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: {{ template "gitlab.gitlab-shell.authToken.secret" . }}
              items:
                - key: {{ template "gitlab.gitlab-shell.authToken.key" . }}
                  path: shell/.gitlab_shell_secret
          - secret:
              name: {{ template "gitlab.gitaly.authToken.secret" . }}
              items:
                - key: {{ template "gitlab.gitaly.authToken.key" . }}
                  path: gitaly/gitaly_token
          {{- include "gitlab.redis.secrets" . | nindent 10 }}
          - secret:
              name: {{ template "gitlab.psql.password.secret" . }}
              items:
                - key: {{ template "gitlab.psql.password.key" . }}
                  path: postgres/psql-password
          {{- if include "gitlab.geo.secondary" $ }}
          - secret:
              name: {{ template "gitlab.geo.psql.password.secret" . }}
              items:
                - key: {{ template "gitlab.geo.psql.password.key" . }}
                  path: postgres/geo-psql-password
          {{- end }}
          - secret:
              name: {{ template "gitlab.registry.certificate.secret" . }}
              items:
                - key: registry-auth.key
                  path: registry/gitlab-registry.key
          {{- if or .Values.backups.objectStorage.config (not .Values.global.minio.enabled) }}
          - secret:
              name: {{ required "A valid backups.objectStorage.config.secret is needed!" .Values.backups.objectStorage.config.secret }}
              items:
                - key: {{ default "config" .Values.backups.objectStorage.config.key }}
                  path: objectstorage/.s3cfg
          {{- end }}
          {{- if eq .Values.backups.objectStorage.backend "gcs" }}
          - secret:
              name: {{ required "A valid backups.objectStorage.config.secret is needed!" .Values.backups.objectStorage.config.secret }}
              items:
                - key: {{ default "config" .Values.backups.objectStorage.config.key }}
                  path: objectstorage/{{ default "config" .Values.backups.objectStorage.config.key }}
          {{- end }}
          {{- include "gitlab.minio.mountSecrets" $ | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "artifacts" "config" $.Values.global.appConfig.artifacts) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "lfs" "config" $.Values.global.appConfig.lfs) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "uploads" "config" $.Values.global.appConfig.uploads) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "packages" "config" $.Values.global.appConfig.packages) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "external_diffs" "config" $.Values.global.appConfig.externalDiffs) | nindent 10 }}
          {{- include "gitlab.appConfig.objectStorage.mountSecrets" (dict "name" "terraform_state" "config" $.Values.global.appConfig.terraformState) | nindent 10 }}
          {{- include "gitlab.appConfig.pseudonymizer.mountSecrets" $ | nindent 10 }}
          {{- include "gitlab.appConfig.ldap.servers.mountSecrets" $ | nindent 10 }}
          {{- include "gitlab.appConfig.omniauth.mountSecrets" $ | nindent 10 }}
          {{- if and $.Values.global.smtp.enabled $.Values.global.smtp.authentication }}
          - secret:
              name: {{ $.Values.global.smtp.password.secret | required "Missing required secret containing the SMTP password. Make sure to set `global.smtp.password.secret`" }}
              items:
                - key: {{ $.Values.global.smtp.password.key }}
                  path: smtp/smtp-password
          {{- end }}
{{- if .Values.global.email.smime.enabled }}
      - name: smime-creds
        projected:
          defaultMode: 0400
          sources:
            - secret:
                name: {{ .Values.global.email.smime.secretName }}
                items:
                  - key: {{ .Values.global.email.smime.keyName }}
                    path: .gitlab_smime_key
                  - key: {{ .Values.global.email.smime.certName }}
                    path: .gitlab_smime_cert
{{- end }}
      - name: task-runner-secrets
        emptyDir:
          medium: "Memory"
      {{- include "gitlab.certificates.volumes" . | nindent 6 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
{{- end }}
